{"version":3,"file":"static/js/544.3c074c9e.chunk.js","mappings":"oLAAaA,EAAQ,WACnB,OAAO,yEACR,C,0GCAYC,EAAYC,EAAAA,GAAAA,GAAH,0YAcTC,EAAQD,EAAAA,GAAAA,IAAH,oEAILE,EAAQF,EAAAA,GAAAA,EAAH,8E,SCfLG,EAAgB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAC7BC,EAA2BF,EAA3BE,GAAIC,EAAuBH,EAAvBG,MAAOC,EAAgBJ,EAAhBI,YACnB,OACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMN,GAA1C,UACE,UAACN,EAAD,YACE,SAACE,EAAD,CACEW,IACEJ,EAAW,yCAC2BA,GAClCK,EAENC,IAAKP,KAEP,SAACL,EAAD,UAAQK,QAIf,ECpBYQ,EAAiBf,EAAAA,GAAAA,GAAH,wRCEdgB,EAAY,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,OAAQZ,EAA2B,EAA3BA,cAAeE,EAAY,EAAZA,MACjD,OACE,iCACE,wBAAKA,KACL,SAACQ,EAAD,UACGE,EAAOC,KAAI,SAAAd,GAAK,OACf,SAACD,EAAD,CAEEC,MAAOA,EACPC,cAAeA,GAFVD,EAAME,GAFE,QAUxB,C,uJC0BD,UArCa,WACX,OAA4Ba,EAAAA,EAAAA,UAAS,MAArC,eAAOF,EAAP,KAAeG,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAASE,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,8GAEyBC,EAAAA,EAAAA,MAFzB,OAEUV,EAFV,OAGIG,EAAUH,EAAOW,SACjBL,EAAUF,EAAAA,EAAAA,UAJd,gDAMIQ,QAAQC,IAAR,MACAP,EAAUF,EAAAA,EAAAA,UAPd,0DAHc,sBACdE,EAAUF,EAAAA,EAAAA,SADI,mCAadU,EACD,GAAE,KAGD,gCACGT,IAAWD,EAAAA,EAAAA,OAAe,wBAC1BC,IAAWD,EAAAA,EAAAA,UAAkB,SAAC,IAAD,IAC7BC,IAAWD,EAAAA,EAAAA,WAAmB,SAAC,IAAD,IAC9BC,IAAWD,EAAAA,EAAAA,WACV,SAAC,IAAD,CACEJ,OAAQA,EACRZ,cAAemB,EACfjB,MAAO,qBAKhB,C,mMCzCDyB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHN,EAAW,mCAAG,oGACFK,EAAAA,EAAAA,IAAA,sCAAyCC,IADvC,cACnBC,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAIXC,EAAe,mCAAG,WAAMC,GAAN,uFACNL,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBI,IAFf,cACvBH,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAMfG,EAAe,mCAAG,WAAMhC,GAAN,uFACN0B,EAAAA,EAAAA,IAAA,iBAAoB1B,EAApB,oBAAkC2B,IAD5B,cACvBC,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfI,EAAe,mCAAG,WAAMjC,GAAN,uFACN0B,EAAAA,EAAAA,IAAA,iBAAoB1B,EAApB,4BAA0C2B,IADpC,cACvBC,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAIfK,EAAe,mCAAG,WAAMlC,GAAN,uFACN0B,EAAAA,EAAAA,IAAA,iBAAoB1B,EAApB,4BAA0C2B,IADpC,cACvBC,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD,oBClB5B,IANe,CACbM,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,W","sources":["components/Error/Error.jsx","components/MovieListItem/MovieListItem.styled.jsx","components/MovieListItem/MovieListItem.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/Api.js","utils/status.jsx"],"sourcesContent":["export const Error = () => {\n  return <p>Oops, something went wrong. Please, try again.</p>;\n};\n","import styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 5px;\n  border-radius: 2px;\n  height: 100%;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\nexport const Image = styled.img`\n  object-fit: cover;\n  min-height: 583px;\n`;\nexport const Title = styled.p`\n  font-size: 20px;\n  padding: 5px;\n  flex-grow: 1;\n`;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport defaultPoster from '../../images/defaultPoster.png';\nimport { MovieItem, Image, Title } from './MovieListItem.styled';\n\nexport const MovieListItem = ({ movie, locationState }) => {\n  const { id, title, poster_path } = movie;\n  return (\n    <Link to={`/movies/${id}`} state={{ from: locationState }}>\n      <MovieItem>\n        <Image\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : defaultPoster\n          }\n          alt={title}\n        />\n        <Title>{title}</Title>\n      </MovieItem>\n    </Link>\n  );\n};\n\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  }),\n  locationState: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MovieContainer = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieListItem } from 'components/MovieListItem/MovieListItem';\nimport { MovieContainer } from './MovieList.styled';\n\nexport const MovieList = ({ movies, locationState, title }) => {\n  return (\n    <>\n      <h1>{title}</h1>\n      <MovieContainer>\n        {movies.map(movie => (\n          <MovieListItem\n            key={movie.id}\n            movie={movie}\n            locationState={locationState}\n          />\n        ))}\n      </MovieContainer>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  title: PropTypes.string,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster: PropTypes.string,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getTrending } from 'services/Api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Error } from 'components/Error/Error';\nimport Status from 'utils/status';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const location = useLocation();\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    async function fetchTrending() {\n      try {\n        const movies = await getTrending();\n        setMovies(movies.results);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        console.log(error);\n        setStatus(Status.REJECTED);\n      }\n    }\n    fetchTrending();\n  }, []);\n\n  return (\n    <>\n      {status === Status.IDLE && <></>}\n      {status === Status.PENDING && <Loader />}\n      {status === Status.REJECTED && <Error />}\n      {status === Status.RESOLVED && (\n        <MovieList\n          movies={movies}\n          locationState={location}\n          title={'Trending today'}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '32e5fb50b2bb500e37db4cd093ac4a39';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n","const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nexport default Status;\n"],"names":["Error","MovieItem","styled","Image","Title","MovieListItem","movie","locationState","id","title","poster_path","to","state","from","src","defaultPoster","alt","MovieContainer","MovieList","movies","map","useState","setMovies","Status","status","setStatus","location","useLocation","useEffect","getTrending","results","console","log","fetchTrending","axios","API_KEY","response","data","getSearchMovies","query","getMovieDetails","getMovieCredits","getMovieReviews","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}