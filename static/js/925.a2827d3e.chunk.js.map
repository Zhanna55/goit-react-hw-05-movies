{"version":3,"file":"static/js/925.a2827d3e.chunk.js","mappings":"gOA0CA,UAtC4B,WAC1B,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE+BC,EAAAA,EAAAA,IAAgBN,GAF/C,UAIwC,KAF9BO,EAFV,QAIqBC,QAAQC,OAJ7B,iDAOIL,EAAWG,EAAaC,SAP5B,gDASIE,QAAQC,IAAR,MATJ,0DADc,uBAAC,WAAD,wBAadC,EACD,GAAE,CAACZ,KAGF,8BACGG,GACC,wBACGA,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADE,OAQf,sEAIP,C,mMCtCDG,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAIXC,EAAe,mCAAG,WAAMC,GAAN,uFACNN,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBK,IAFf,cACvBH,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAMfG,EAAe,mCAAG,WAAMV,GAAN,uFACNG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,oBAAkCI,IAD5B,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfI,EAAe,mCAAG,WAAMX,GAAN,uFACNG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,4BAA0CI,IADpC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAIff,EAAe,mCAAG,WAAMQ,GAAN,uFACNG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,4BAA0CI,IADpC,cACvBE,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,qD","sources":["components/MovieDetailsReviews/MovieDetailsReviews.jsx","services/Api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/Api';\n\nconst MovieDetailsReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        const movieReviews = await getMovieReviews(movieId);\n\n        if (movieReviews.results.length === 0) {\n          return;\n        }\n        setReviews(movieReviews.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsReviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '32e5fb50b2bb500e37db4cd093ac4a39';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getMovieReviews","movieReviews","results","length","console","log","fetchReviews","map","id","author","content","axios","API_KEY","getTrending","response","data","getSearchMovies","query","getMovieDetails","getMovieCredits"],"sourceRoot":""}