{"version":3,"file":"static/js/529.721a9a16.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/MovieDetailsCard/MovieDetailsCard.styled.jsx","components/MovieDetailsCard/MovieDetailsCard.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/Api.js","utils/status.jsx"],"sourcesContent":["export const Error = () => {\n  return <p>Oops, something went wrong. Please, try again.</p>;\n};\n","import styled from 'styled-components';\n\nexport const CardContainer = styled.div`\n  display: flex;\n  padding: 10px 0;\n  gap: 20px;\n  border-bottom: 1px solid gray;\n`;\n","import PropTypes from 'prop-types';\nimport defaultPoster from '../../images/defaultPoster.png';\nimport { CardContainer } from './MovieDetailsCard.styled';\n\nexport const MovieDetailsCard = ({ movie }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n  console.log(movie);\n  return (\n    <CardContainer>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w300${poster_path}`\n            : defaultPoster\n        }\n        alt={title}\n        style={{ width: 300 }}\n      />\n      <div>\n        <h1>\n          {title} <span>({release_date.slice(0, 4)})</span>\n        </h1>\n        <p>User Score: {vote_average.toFixed(1) * 10}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres.map(({ name }) => name).join(' ')}</p>\n      </div>\n    </CardContainer>\n  );\n};\n\nMovieDetailsCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 10px;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 80px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const Wrapper = styled.div`\n  border-bottom: 1px solid gray;\n`;\n","import { useState, useEffect } from 'react';\nimport {\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n  Link,\n} from 'react-router-dom';\nimport { getMovieDetails } from 'services/Api';\nimport { Loader } from 'components/Loader/Loader';\nimport { Error } from 'components/Error/Error';\nimport { MovieDetailsCard } from 'components/MovieDetailsCard/MovieDetailsCard';\nimport { Container, Button, Wrapper } from './MovieDetails.styled';\nimport Status from 'utils/status';\n\nconst MovieDetails = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    async function fetchMovieDetails() {\n      try {\n        const movie = await getMovieDetails(movieId);\n        console.log(movie);\n        setMovie(movie);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        console.log(error);\n        setStatus(Status.REJECTED);\n      }\n    }\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const goBack = () => navigate(backLink);\n  return (\n    <>\n      {status === Status.PENDING && <Loader />}\n      {status === Status.REJECTED && <Error />}\n      {status === Status.RESOLVED && movie && (\n        <Container>\n          <Button onClick={goBack}>Go Back</Button>\n          <MovieDetailsCard movie={movie} />\n\n          <Wrapper>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <Link state={{ from: backLink }} to=\"cast\">\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link state={{ from: backLink }} to=\"reviews\">\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </Wrapper>\n          <Outlet />\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '32e5fb50b2bb500e37db4cd093ac4a39';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n","const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\nexport default Status;\n"],"names":["Error","CardContainer","styled","MovieDetailsCard","movie","poster_path","title","release_date","vote_average","overview","genres","console","log","src","defaultPoster","alt","style","width","slice","toFixed","map","name","join","Container","Button","Wrapper","navigate","useNavigate","backLink","useLocation","state","from","movieId","useParams","useState","setMovie","Status","status","setStatus","useEffect","getMovieDetails","fetchMovieDetails","Loader","onClick","to","axios","API_KEY","getTrending","response","data","getSearchMovies","query","id","getMovieCredits","getMovieReviews","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}